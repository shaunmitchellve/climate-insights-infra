# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Create the subnetwork with-in a manually create VPC. The VPC name must be provided since
# network design is customer specific
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  name: ce-subnet # kpt-set: ${subnetwork-name}
  namespace: KCC-NAMESPACE
  annotations:
    cnrm.cloud.google.com/blueprint: kpt-fn-live
  labels:
    created-by-arete: "true"
spec:
  description: |
    Climate Engine GKE subnetwork with 2 secondary ranges for GKE pods and services
  ipCidrRange: 10.0.0.0/28 # kpt-set: ${subnetwork-range}
  region: GCP-REGION # kpt-set: ${region}
  networkRef:
    external: default # kpt-set: ${network-name}
  privateIpGoogleAccess: true
  secondaryIpRange:
    - ipCidrRange: 10.4.0.0/14 # kpt-set: ${gke-pods-range}
      rangeName: gke-pods-range # kpt-set: ${gke-pods-range-name}
    - ipCidrRange: 10.8.0.0/20 # kpt-set: ${gke-services-range}
      rangeName: gke-services-range # kpt-set: ${gke-services-range-name}
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  name: proxy-only-subnet
  namespace: KCC-NAMESPACE
  annotations:
    cnrm.cloud.google.com/blueprint: kpt-fn-live
  labels:
    created-by-arete: "true"
spec:
  description: |
    Climate Engine GKE services subnet
  role: ACTIVE
  purpose: INTERNAL_HTTPS_LOAD_BALANCER
  ipCidrRange: 10.129.0.0/23 # kpt-set: ${proxy-subnet-range}
  region: GCP-REGION # kpt-set: ${region}
  networkRef:
    external: default # kpt-set: ${network-name}
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouter
metadata:
  name: nat-router
  namespace: KCC-NAMESPACE
  annotations:
    cnrm.cloud.google.com/project-id: GCP-PROJECT-ID # kpt-set: ${project-id}
    cnrm.cloud.google.com/blueprint: kpt-fn-live
  labels:
    created-by-arete: "true"
spec:
  description: Router for Cloud NAT
  region: GCP-REGION # kpt-set: ${region}
  networkRef:
    external: default # kpt-set: ${network-name}
---
# Create a Cloud NAT for the bastion host to be able to pull setup libraries from public
# repos.
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouterNAT
metadata:
  name: bastion-nat
  namespace: KCC-NAMESPACE
  annotations:
    cnrm.cloud.google.com/blueprint: kpt-fn-live
  labels:
    created-by-arete: "true"
spec:
  region: GCP-REGION # kpt-set: ${region}
  routerRef:
    name: nat-router
  natIpAllocateOption: AUTO_ONLY
  sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata: # kpt-merge: CHANGE-NAMESPACE/google-managed-services-ip
  annotations:
    cnrm.cloud.google.com/blueprint: kpt-pkg-fn-live
    cnrm.cloud.google.com/project-id: GCP-PROJECT-ID # kpt-set: ${project-id}
  name: google-managed-services-ip
  namespace: KCC-NAMESPACE
  labels:
    created-by-arete: "true"
spec:
  addressType: INTERNAL
  purpose: VPC_PEERING
  location: global
  networkRef:
    external: default # kpt-set: ${network-name}
  prefixLength: 16
---
apiVersion: servicenetworking.cnrm.cloud.google.com/v1beta1
kind: ServiceNetworkingConnection
metadata: # kpt-merge: CHANGE-NAMESPACE/google-managed-services-ce-vpc
  annotations:
    cnrm.cloud.google.com/blueprint: kpt-pkg-fn-live
    cnrm.cloud.google.com/project-id: GCP-PROJECT-ID # kpt-set: ${project-id}
  name: google-managed-services-ce-vpc
  namespace: KCC-NAMESPACE
  labels:
    created-by-arete: "true"
spec:
  networkRef:
    external: default # kpt-set: ${network-name}
  reservedPeeringRanges:
    - name: google-managed-services-ip
      namespace: KCC-NAMESPACE # kpt-set: ${namespace}
  service: servicenetworking.googleapis.com